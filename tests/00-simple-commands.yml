---
cases:
  - name: simple `echo` command
    script: |
      echo foo bar
    expect:
      stdout: "foo bar\n"

  - name: quoted strings
    script: |
      echo "Hello"   'World' '$unrecognized_var'
    expect:
      stdout: "Hello World $unrecognized_var\n"

  - name: concatination
    script: |
      echo "Hello"'World'Foobar
    expect:
      stdout: "HelloWorldFoobar\n"

  - name: environment variables
    env: ["name=yassinebenaid", "job=developer"]
    script: |
      echo name: $name "job:$job"
    expect:
      stdout: "name: yassinebenaid job:developer\n"

  - name: positional variables
    args: ["foo", "bar", "baz"]
    script: |
      echo $1$2 "$3boo"
    expect:
      stdout: "foobar bazboo\n"

  - name: special variables
    args: ["foo", "bar", "baz"]
    script: |
      true
      echo $?
      false
      echo $?

      echo $#

      echo $*
      echo $@
    expect:
      stdout: |
        0
        1
        3
        foo bar baz
        foo bar baz

  - name: shell parameters
    script: |
      name=bunster
      lang="golang" source='bash' target=$lang
      echo $name $lang $source $target
    expect:
      stdout: "bunster golang bash golang\n"

  - name: passing shell parameters as environment variables
    env: [lang=golang]
    script: |
      source=$lang built_with=$source  sh -c 'echo $source $built_with'

      null=   sh -c 'echo $null'

      name=bunster sh -c 'echo $name $lang'
    expect:
      stdout: |
        golang

        bunster golang

  - name: calling undefined command raises an error
    script: |
      foobar
      /path/to/foobar
    expect:
      exit_code: 1
      stderr: |
        "foobar": executable file not found in $PATH
        "/path/to/foobar": no such file or directory

  - name: UTF-8 is supported
    script: |
      echo "雷卷是一个好程序员！"
    expect:
      stdout: "雷卷是一个好程序员！\n"
