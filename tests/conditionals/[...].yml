---
cases:
  - name: "can test simple string comparison using the [...] syntax"
    script: |
      name=bunster
      [ $name = bunster ]
      echo '1': $?

      [ $name = bunsters ]
      echo '2': $?

      name=bunster
      [ $name != bunster ]
      echo '3': $?

      [ $name != bunsters ]
      echo '4': $?


      [ a < z ]
      echo '5': $?

      [ z < a ]
      echo '6': $?

      [ a > z ]
      echo '7': $?

      [ z > a ]
      echo '8': $?

      [ bunster == bunster ]
      echo '9': $?

      [ bunster == not-bunster ]
      echo '10': $?
    expect:
      stdout: |
        1: 0
        2: 1
        3: 1
        4: 0
        5: 0
        6: 1
        7: 1
        8: 0
        9: 0
        10: 1

  - name: "can test simple arithmetic comparison using the [...] syntax"
    script: |
      [ 100 -eq 100 ]
      echo '1': $?

      [ 100 -eq 2129 ]
      echo '2': $?

      [ 100 -ne 100 ]
      echo '3': $?

      [ 100 -ne 2129 ]
      echo '4': $?

      [ 99 -lt 100 ]
      echo '5': $?

      [ 100 -lt 100 ]
      echo '6': $?

      [ 99 -le 100 ]
      echo '7': $?

      [ 100 -le 100 ]
      echo '8': $?

      [ 200 -le 100 ]
      echo '9': $?

      [ 100 -gt 100 ]
      echo '10': $?

      [ 200 -gt 100 ]
      echo '11': $?

      [ 99 -ge 100 ]
      echo '12': $?

      [ 100 -ge 100 ]
      echo '13': $?

      [ 200 -ge 100 ]
      echo '14': $?
    expect:
      stdout: |
        1: 0
        2: 1
        3: 1
        4: 0
        5: 0
        6: 1
        7: 0
        8: 0
        9: 1
        10: 1
        11: 0
        12: 1
        13: 0
        14: 0

  - name: "can test binary file comparison using the [...] syntax"
    script: |
      touch file1
      ln file1 file2
      touch file3

      [ file1 -ef file2 ]
      echo '1': $?

      [ file1 -ef file23 ]
      echo '2': $?
    expect:
      stdout: |
        1: 0
        2: 1
