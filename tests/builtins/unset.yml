cases:
  - name: unset keyword removes variables
    script: |
      var=foo

      echo 1:$var
      test -v var
      echo isset:$?

      unset var

      echo 2:$var
      test -v var
      echo isset:$?
    expect:
      stdout: |
        1:foo
        isset:0
        2:
        isset:1

  - name: unset keyword removes environment variables
    env:
      - foo=bar
    script: |
      echo 1:$foo
      test -v foo
      echo isset:$?

      unset foo

      echo 2:$foo
      test -v foo
      echo isset:$?
    expect:
      stdout: |
        1:bar
        isset:0
        2:
        isset:1

  - name: unset keyword removes local variables
    script: |

      func(){
        local foo=bar

        echo 1:$foo
        test -v foo
        echo isset:$?

        unset foo

        echo 2:$foo
        test -v foo
        echo isset:$?
      }

      func
    expect:
      stdout: |
        1:bar
        isset:0
        2:
        isset:1

  - name: unset keyword removes functions
    script: |
      foo-bar(){
        echo foo
      }

      foo-bar

      unset foo-bar

      foo-bar
    expect:
      exit_code: 1
      stderr: |
        "foo-bar": executable file not found in $PATH
      stdout: |
        foo

  - name: unset gives variables precedence higher than functions
    script: |
      foobar=baz

      foobar(){
        echo foo
      }

      echo var:$foobar
      foobar

      unset foobar

      echo var:$foobar
      foobar
    expect:
      stdout: |
        var:baz
        foo
        var:
        foo
