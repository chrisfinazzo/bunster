cases:
  - name: can embed a file
    module:
      file.txt: "foobar"
      dir/file.txt: "foobar"
      main.sh: |
        @embed file.txt dir/file.txt
    expect:
      exit_code: 0

  - name: can embed a directory
    module:
      dir/file.txt: "foobar"
      main.sh: |
        @embed dir
    expect:
      exit_code: 0

  - name: can embed a multiple files and directories inline or using multiple embed directives
    module:
      dir1/file.txt: "foo"
      dir2/file.txt: "foo"
      dir3/file.txt: "foo"
      file.txt: "foo"
      file2.txt: "foo"
      main.sh: |
        @embed dir1 dir2 file.txt
        @embed dir3
        @embed file2.txt
    expect:
      exit_code: 0

  - name: cannot use 'embed' command when no files are embedded
    script: |
      embed cat file.txt
    expect:
      exit_code: 1
      stderr: "embed: no files were embedded\n"

  - name: can read embedded files
    module:
      dir/file.txt: "foobar\n"
      dir2/file.txt: "foobar\n"
      file.txt: "foobar\n"
      main.sh: |
        @embed file.txt dir dir2/file.txt

        embed cat file.txt
        embed cat dir/file.txt
        embed cat dir2/file.txt
    expect:
      stdout: |
        foobar
        foobar
        foobar

  - name: cannot read files that are not embedded
    module:
      file.txt: "foobar"
      main.sh: |
        @embed file.txt

        embed cat file2.txt
    expect:
      exit_code: 1
      stderr: "embed: open file2.txt: file does not exist\n"

  - name: can list embeded directories
    module:
      file.txt: "foobar"
      dir/file.txt: "foobar"
      dir/file2.txt: "foobar"
      dir/dir2/file.txt: "foobar"
      dir/dir2/file2.txt: "foobar"
      dir3/file.txt: "foobar"

      main.sh: |
        @embed file.txt dir dir3/file.txt

        embed ls .
        echo "---"
        embed ls dir
        echo "---"
        embed ls dir/dir2
        echo "---"
        embed ls dir3
    expect:
      stdout: |
        dir
        dir3
        file.txt
        ---
        dir2
        file.txt
        file2.txt
        ---
        file.txt
        file2.txt
        ---
        file.txt

  - name: embed command expects exactly 2 arguments
    module:
      file.txt: "foo"
      main.sh: |
        @embed file.txt

        embed arg1 arg2 arg3
        embed arg1
    expect:
      exit_code: 1
      stderr: |
        embed: expected 2 arguments, got 3
        embed: expected 2 arguments, got 1

  - name: embed command expects valid arguments
    module:
      file.txt: "foo"
      main.sh: |
        @embed file.txt

        embed cmd file.txt
    expect:
      exit_code: 1
      stderr: |
        embed: "cmd" is not a valid embed command

  - name: special files are not embeded
    module:
      dir/file: foo
      dir/.git/file: foo
      dir/go.mod: "foo"
      main.sh: |
        @embed dir

        embed ls dir
    expect:
      stdout: |
        file

  - name: "cannot embed files outside the module"
    script: |
      @embed ../file
    expect:
      build_error: 'main.sh(0:0): semantic error: the path "../file" cannot be embeded because it is not local to the module.'

  - name: "@embed directive is only valid in global scope"
    script: |
      (
        @embed foo
      )
    expect:
      build_error: "main.sh(0:0): semantic error: using '@embed' directive is only valid in global scope."
