cases:
  - name: can shift positional arguments
    args: [foo, bar, baz]
    script: |

      echo "1:$1 2:$2 3:$3"

      shift

      echo "1:$1 2:$2 3:$3"

      shift

      echo "1:$1 2:$2 3:$3"

      shift

      echo "1:$1 2:$2 3:$3"
    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1:bar 2:baz 3:
        1:baz 2: 3:
        1: 2: 3:

  - name: can shift positional arguments with a specific degree
    args: [foo, bar, baz]
    script: |

      echo "1:$1 2:$2 3:$3"

      shift 2

      echo "1:$1 2:$2 3:$3"

      shift

      echo "1:$1 2:$2 3:$3"

    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1:baz 2: 3:
        1: 2: 3:

  - name: can shift positional arguments with a degree out of range
    args: [foo, bar, baz]
    script: |

      echo "1:$1 2:$2 3:$3"

      shift 99

      echo "1:$1 2:$2 3:$3"

      shift

      echo "1:$1 2:$2 3:$3"

    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1: 2: 3:
        1: 2: 3:

  - name: can shift positional arguments within a function
    script: |

      function func() {
          echo "1:$1 2:$2 3:$3"

          shift

          echo "1:$1 2:$2 3:$3"

          shift

          echo "1:$1 2:$2 3:$3"

          shift

          echo "1:$1 2:$2 3:$3"
      }

      func foo bar baz

    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1:bar 2:baz 3:
        1:baz 2: 3:
        1: 2: 3:

  - name: can shift positional arguments within a function with specific degree
    script: |

      function func() {
          echo "1:$1 2:$2 3:$3"

          shift 2

          echo "1:$1 2:$2 3:$3"

          shift

          echo "1:$1 2:$2 3:$3"
      }

      func foo bar baz

    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1:baz 2: 3:
        1: 2: 3:

  - name: can shift positional arguments with a degree out of range in functions
    script: |

      function func() {

          echo "1:$1 2:$2 3:$3"

          shift 99

          echo "1:$1 2:$2 3:$3"

          shift

          echo "1:$1 2:$2 3:$3"
      }

      func foo bar baz
    expect:
      stdout: |
        1:foo 2:bar 3:baz
        1: 2: 3:
        1: 2: 3:

  - name: shifting positional arguments withing a function does not affect global args
    args: [foo, bar]
    script: |
      echo $@

      function func() {
          echo $@

          shift 

          echo $@
      }

      func boo baz
      echo $@

    expect:
      stdout: |
        foo bar
        boo baz
        baz
        foo bar

  - name: shifting positional arguments withing a sub-shell does not affect global args
    args: [foo, bar]
    script: |
      echo $@

      (
          echo $@

          shift 

          echo $@
      )

      echo $@

    expect:
      stdout: |
        foo bar
        foo bar
        bar
        foo bar

  - name: shift command expects 0 or 1 arguments only
    script: |
      shift 1 2 3
    expect:
      exit_code: 1
      stderr: "embed: expected 1 or 0 arguments, got 3\n"

  - name: shift command expects valid integer
    script: |
      shift foo
    expect:
      exit_code: 1
      stderr: "embed: \"foo\" is not a valid integer\n"
