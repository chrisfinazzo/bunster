cases:
  - name: can expand variables
    script: |
      var=雷卷是一个好程序员！

      echo expansion:${var}
      echo length:${#var}
    expect:
      stdout: |
        expansion:雷卷是一个好程序员！
        length:10

  - name: variable or default
    script: |
      var=foo
      null_var=

      echo  not-null:${var:-default} \
            not-null:${null_var:-default} \
            not-null:${null_var:-}  \
            not-null:${null_var:-$(echo foobar)}

      echo  isset:${var-default} \
            isset:${unset_var-default} \
            isset:${unset_var-} \
            isset:${unset_var-$(echo foobar)} \
            isset:${null_var-default}
    expect:
      stdout: |
        not-null:foo not-null:default not-null: not-null:foobar
        isset:foo isset:default isset: isset:foobar isset:

  - name: set variable or use default if its unset
    script: |
      var=foo
      null_var=
      null_var2=

      echo  1:${var=default} \
            2:${null_var=bar} \
            3:$null_var \
            4:${null_var2=} \
            5:$null_var2 \
            6:${unset_var=default} \
            7:$unset_var \
            8:${unset_var2=$(echo foobar)} \
            9:$unset_var2
    expect:
      stdout: |
        1:foo 2: 3: 4: 5: 6:default 7:default 8:foobar 9:foobar

  - name: set variable or use default if it's null
    script: |
      var=foo
      null_var=
      null_var2=

      echo  1:${var:=default} \
            2:${null_var:=bar} \
            3:$null_var \
            4:${null_var2:=} \
            5:$null_var2 \
            6:${unset_var:=foo} \
            7:$unset_var \
            8:${unset_var2:=$(echo foobar)} \
            9:$unset_var2

    expect:
      stdout: |
        1:foo 2:bar 3:bar 4: 5: 6:foo 7:foo 8:foobar 9:foobar

  - name: if variable is set then use default
    script: |
      var=foo
      null_var=

      echo  1:${var+bar} \
            2:${null_var+bar} \
            3:${unset_var+bar} \
            4:${var+$(echo foobar)}

    expect:
      stdout: |
        1:bar 2:bar 3: 4:foobar

  - name: if variable is set or is null then use default
    script: |
      var=foo
      null_var=

      echo  1:${var:+bar} \
            2:${null_var:+bar} \
            3:${unset_var:+bar} \
            4:${var:+$(echo foobar)}

    expect:
      stdout: |
        1:bar 2: 3: 4:foobar

  - name: can slice a string
    script: |
      var=abcdefghijklmnop

      echo  1:${var:2} 
      echo  2:${var:5}
      echo  3:${var:5:5}
      echo  4:${var: -4}
      echo  5:${var: -2}
      echo  6:${var: -7:5}
      echo  7:${var: -7: -5}
      echo  8:${var: -7: -1}

    expect:
      stdout: |
        1:cdefghijklmnop
        2:fghijklmnop
        3:fghij
        4:mnop
        5:op
        6:jklmn
        7:jk
        8:jklmno

  - name: can change case of alphbetical characters
    script: |
      var=aaabbbcccdddeee

      echo  1:${var^}
      echo  2:${var^d}
      echo  3:${var^[[:alpha:]]}
      echo  4:${var^[ce]}
      echo
      echo  5:${var^^}
      echo  6:${var^^d}
      echo  7:${var^^[[:alpha:]]}
      echo  8:${var^^[ce]}

      var=AAABBBCCCDDDEEE

      echo
      echo  9:${var,}
      echo  10:${var,D}
      echo  11:${var,[[:alpha:]]}
      echo  12:${var,[CE]}
      echo
      echo  13:${var,,}
      echo  14:${var,,D}
      echo  15:${var,,[[:alpha:]]}
      echo  16:${var,,[CE]}
    expect:
      stdout: |
        1:Aaabbbcccdddeee
        2:aaabbbcccDddeee
        3:Aaabbbcccdddeee
        4:aaabbbCccdddeee

        5:AAABBBCCCDDDEEE
        6:aaabbbcccDDDeee
        7:AAABBBCCCDDDEEE
        8:aaabbbCCCdddEEE

        9:aAABBBCCCDDDEEE
        10:AAABBBCCCdDDEEE
        11:aAABBBCCCDDDEEE
        12:AAABBBcCCDDDEEE

        13:aaabbbcccdddeee
        14:AAABBBCCCdddEEE
        15:aaabbbcccdddeee
        16:AAABBBcccDDDeee

  - name: can match and remove prefix
    script: |
      var=aaabbbcccdddeee

      echo  1:${var#a}
      echo  2:${var#[a]}
      echo  3:${var#b}
      echo  4:${var#*b}
      echo  5:${var#*bc}
      echo  6:${var#*e}
      echo
      echo  7:${var##a}
      echo  8:${var##[a]}
      echo  9:${var##b}
      echo  10:${var##*b}
      echo  11:${var##*bc}
      echo  12:${var##*e}
    expect:
      stdout: |
        1:aabbbcccdddeee
        2:aabbbcccdddeee
        3:aaabbbcccdddeee
        4:bbcccdddeee
        5:ccdddeee
        6:ee

        7:aabbbcccdddeee
        8:aabbbcccdddeee
        9:aaabbbcccdddeee
        10:cccdddeee
        11:ccdddeee
        12:
