#(TEST: simple parameter set)

key=value

#(RESULT)
package main

import "github.com/yassinebenaid/bunster/runtime"

func Main(shell *runtime.Shell, streamManager *runtime.StreamManager) {
    func(){
		shell.SetVar("key", "value")

	}()
}

#(ENDTEST)



#(TEST: longer parameter set)

key1=value key2="value" key3='value'

key4=$value

key5=value \
    key6=value

#(RESULT)
package main

import "github.com/yassinebenaid/bunster/runtime"

func Main(shell *runtime.Shell, streamManager *runtime.StreamManager) {
   	func(){
		shell.SetVar("key1", "value")
		shell.SetVar("key2", "value")
		shell.SetVar("key3", "value")

	}()
    func(){
		shell.SetVar("key4", shell.ReadVar("value"))

	}()
    func(){
		shell.SetVar("key5", "value")
		shell.SetVar("key6", "value")

	}()
}

#(ENDTEST)


#(TEST: zero parameter set)

key1= key2=

#(RESULT)
package main

import "github.com/yassinebenaid/bunster/runtime"

func Main(shell *runtime.Shell, streamManager *runtime.StreamManager) {
    func(){
		shell.SetVar("key1", "")
		shell.SetVar("key2", "")

	}()
}

#(ENDTEST)


#(TEST: exporting parameters)

export key=value key2

#(RESULT)
package main

import "github.com/yassinebenaid/bunster/runtime"

func Main(shell *runtime.Shell, streamManager *runtime.StreamManager) {
    func(){
		shell.SetExportVar("key", "value")
		shell.MarkVarAsExported("key2")

	}()
}

#(ENDTEST)
